class
 refid "com.company.util:_-mz"
 instance QName(PackageNamespace("com.company.util"), "_-mz")
  extends QName(PackageNamespace(""), "Object")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("_-8j")
  iinit
   refid "com.company.util:_-mz/iinit"
   body
    maxstack 3
    localcount 3
    initscopedepth 4
    maxscopedepth 5
    code
     pushfalse
     pushtrue
     swap
     jump                L10

     add_i
     modulo
     getlocal1
     greaterthan
     typeof
     checkfilter
L10:
     setlocal1

     setlocal2

     getlocal0
     pushscope

     getlocal1
     iftrue              L18

     getlocal0
     constructsuper      0

L18:
     returnvoid
    end ; code
   end ; body
  end ; method
 end ; instance
 cinit
  refid "com.company.util:_-mz/cinit"
  body
   maxstack 3
   localcount 1
   initscopedepth 3
   maxscopedepth 4
   code
    getlocal0
    pushscope

    returnvoid
   end ; code
  end ; body
 end ; method
 trait method QName(PackageNamespace(""), "_-23") flag FINAL dispid 3
  method
   refid "com.company.util:_-mz/_-23"
   param QName(PackageNamespace(""), "Number")
   param QName(PackageNamespace(""), "Number")
   param QName(PackageNamespace(""), "Number")
   param QName(PackageNamespace(""), "Number")
   param QName(PackageNamespace(""), "Number")
   param QName(PackageNamespace(""), "Number")
   param QName(PackageNamespace(""), "Number")
   param QName(PackageNamespace(""), "Number")
   returns QName(PackageNamespace("flash.geom"), "Point")
   body
    maxstack 8
    localcount 15
    initscopedepth 3
    maxscopedepth 4
    code
     pushfalse
     pushtrue
     swap
     jump                L10

     getglobalscope
     getlocal            8
     lessequals
     declocal_i          7
     getlocal2
     setlocal2

L10:
     setlocal            13

     setlocal            14

     getlocal0
     pushscope

     getlocal            8
     getlocal            14
     iffalse             L51

     getlocal            6
     subtract
     getlocal            14
     dup
     iftrue              L25

     pop
     getlocal2
     convert_b
L25:
     iffalse             L89

     getlocal3
     getlocal1
     getlocal            13
     dup
     iffalse             L34

     pop
     getlocal3
     convert_b
L34:
     iftrue              L78

     subtract
     getlocal            14
     dup
     iftrue              L42

     pop
     getlocal3
     convert_b
L42:
     iffalse             L70

     multiply
     getlocal            14
     dup
     iftrue              L50

     pop
     getlocal3
     convert_b
L50:
     iffalse             L90

L51:
     getlocal            7
     getlocal            13
     dup
     iffalse             L58

     pop
     getlocal1
     convert_b
L58:
     iftrue              L81

     getlocal            5
     getlocal            14
     iffalse             L78

     subtract
     getlocal            13
     dup
     iffalse             L69

     pop
     getlocal1
     convert_b
L69:
     iftrue              L91

L70:
     getlocal            4
     getlocal            14
     dup
     iftrue              L77

     pop
     getlocal3
     convert_b
L77:
     iffalse             L80

L78:
     getlocal2
     subtract
L80:
     multiply
L81:
     subtract
     getlocal            14
     dup
     iftrue              L88

     pop
     getlocal2
     convert_b
L88:
     iffalse             L90

L89:
     convert_d
L90:
     dup
L91:
     setlocal            9

     getlocal            14
     dup
     iftrue              L98

     pop
     getlocal1
     convert_b
L98:
     iffalse             L126

     pushbyte            0
     ifne                L110

     getlocal            14
     dup
     iftrue              L107

     pop
     getlocal3
     convert_b
L107:
     iffalse             L110

     pushnull
     returnvalue

L110:
     getlocal            7
     getlocal            5
     subtract
     getlocal2
     getlocal            13
     iftrue              L125

     getlocal            6
     getlocal            14
     dup
     iftrue              L123

     pop
     getlocal2
     convert_b
L123:
     iffalse             L153

     subtract
L125:
     multiply
L126:
     getlocal            8
     getlocal            13
     dup
     iffalse             L133

     pop
     getlocal2
     convert_b
L133:
     iftrue              L145

     getlocal            6
     getlocal            13
     iftrue              L153

     subtract
     getlocal            13
     dup
     iffalse             L144

     pop
     getlocal3
     convert_b
L144:
     iftrue              L170

L145:
     getlocal1
     getlocal            14
     dup
     iftrue              L152

     pop
     getlocal3
     convert_b
L152:
     iffalse             L155

L153:
     getlocal            5
     subtract
L155:
     multiply
     getlocal            14
     dup
     iftrue              L169

     pop
     jump                L167

     declocal            10
     inclocal            8
     convert_u
     inclocal_i          3
     inclocal_i          5
     declocal_i          9
L167:
     getlocal0
     convert_b
L169:
     iffalse             L172

L170:
     subtract
     getlocal            9
L172:
     divide
     convert_d
     setlocal            10

     getlocal3
     getlocal            14
     iffalse             L225

     getlocal1
     subtract
     getlocal            14
     iffalse             L221

     getlocal2
     getlocal            6
     getlocal            13
     dup
     iffalse             L190

     pop
     getlocal0
     convert_b
L190:
     iftrue              L199

     subtract
     multiply
     getlocal            14
     iffalse             L221

     getlocal            4
     getlocal2
     getlocal            13
     iftrue              L210

L199:
     subtract
     getlocal1
     getlocal            13
     dup
     iffalse             L207

     pop
     getlocal0
     convert_b
L207:
     iftrue              L210

     getlocal            5
     subtract
L210:
     multiply
     getlocal            14
     dup
     iftrue              L217

     pop
     getlocal3
     convert_b
L217:
     iffalse             L222

     subtract
     getlocal            14
     iffalse             L225

L221:
     getlocal            9
L222:
     divide
     getlocal            13
     iftrue              L226

L225:
     convert_d
L226:
     setlocal            11

     getlocal            13
     dup
     iffalse             L233

     pop
     getlocal3
     convert_b
L233:
     iftrue              L319

     getlocal            10
     getlocal            13
     iftrue              L256

     pushbyte            1
     getlocal            14
     iffalse             L290

     greaterthan
     dup
     getlocal            13
     iftrue              L292

     iftrue              L267

     pop
     getlocal            14
     dup
     iftrue              L252

     pop
     getlocal3
     convert_b
L252:
     iffalse             L301

     getlocal            10
     getlocal            14
     iffalse             L289

L256:
     pushdouble          0
     getlocal            14
     dup
     iftrue              L263

     pop
     getlocal1
     convert_b
L263:
     iffalse             L303

     lessthan
     getlocal            14
     iffalse             L291

L267:
     dup
     getlocal            13
     dup
     iffalse             L274

     pop
     getlocal0
     convert_b
L274:
     iftrue              L292

     iftrue              L291

     getlocal            14
     iffalse             L304

     pop
     getlocal            13
     iftrue              L319

     getlocal            11
     getlocal            14
     dup
     iftrue              L288

     pop
     getlocal3
     convert_b
L288:
     iffalse             L302

L289:
     pushbyte            1
L290:
     greaterthan
L291:
     dup
L292:
     iftrue              L304

     pop
     getlocal            14
     dup
     iftrue              L300

     pop
     getlocal1
     convert_b
L300:
     iffalse             L319

L301:
     getlocal            11
L302:
     pushdouble          0
L303:
     lessthan
L304:
     iffalse             L321

     getlocal            13
     dup
     iffalse             L318

     pop
     getlocal0
     jump                L317

     kill                8
     popscope
     declocal            13
     bitnot
     getlocal2
     add_i
L317:
     convert_b
L318:
     iftrue              L321

L319:
     pushnull
     returnvalue

L321:
     findpropstrict      QName(PackageNamespace("flash.geom"), "Point")
     getlocal1
     getlocal            10
     getlocal3
     getlocal1
     subtract
     multiply
     add
     getlocal2
     getlocal            10
     getlocal            4
     getlocal2
     subtract
     multiply
     add
     constructprop       QName(PackageNamespace("flash.geom"), "Point"), 2
     coerce              QName(PackageNamespace("flash.geom"), "Point")
     dup
     setlocal            12

     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "_-KZ") flag FINAL dispid 4
  method
   refid "com.company.util:_-mz/_-KZ"
   param QName(PackageNamespace(""), "Number")
   param QName(PackageNamespace(""), "Number")
   param QName(PackageNamespace(""), "Number")
   param QName(PackageNamespace(""), "Number")
   param QName(PackageNamespace(""), "Number")
   param QName(PackageNamespace(""), "Number")
   returns QName(PackageNamespace(""), "Number")
   body
    maxstack 6
    localcount 15
    initscopedepth 3
    maxscopedepth 4
    code
     pushfalse
     pushtrue
     swap
     jump                L10

     declocal_i          12
     multiply_i
     setlocal            12

     declocal_i          4
     declocal            5
     declocal            7
L10:
     setlocal            13

     setlocal            14

     getlocal0
     pushscope

     pushnan
     setlocal            10

     pushnan
     setlocal            11

     pushnan
     setlocal            12

     getlocal            5
     getlocal            13
     iftrue              L28

     getlocal3
     subtract
     getlocal            13
     iftrue              L28

     convert_d
L28:
     setlocal            7

     getlocal            6
     getlocal            13
     dup
     iffalse             L36

     pop
     getlocal3
     convert_b
L36:
     iftrue              L46

     getlocal            4
     subtract
     getlocal            14
     dup
     iftrue              L45

     pop
     getlocal0
     convert_b
L45:
     iffalse             L47

L46:
     convert_d
L47:
     setlocal            8

     getlocal            7
     getlocal            13
     dup
     iffalse             L55

     pop
     getlocal2
     convert_b
L55:
     iftrue              L72

     getlocal            7
     getlocal            13
     dup
     iffalse             L63

     pop
     getlocal0
     convert_b
L63:
     iftrue              L75

     multiply
     getlocal            13
     dup
     iffalse             L71

     pop
     getlocal2
     convert_b
L71:
     iftrue              L87

L72:
     getlocal            8
     getlocal            13
     iftrue              L79

L75:
     getlocal            8
     multiply
     getlocal            13
     iftrue              L89

L79:
     add
     getlocal            13
     dup
     iffalse             L86

     pop
     getlocal0
     convert_b
L86:
     iftrue              L88

L87:
     convert_d
L88:
     dup
L89:
     setlocal            9

     getlocal            14
     dup
     iftrue              L96

     pop
     getlocal2
     convert_b
L96:
     iffalse             L287

     pushdouble          0.001
     getlocal            13
     dup
     iffalse             L104

     pop
     getlocal2
     convert_b
L104:
     iftrue              L124

     ifnlt               L120

     getlocal3
     getlocal            14
     dup
     iftrue              L113

     pop
     getlocal1
     convert_b
L113:
     iffalse             L291

     convert_d
     setlocal            10

     getlocal            4
     convert_d
     setlocal            11

     jump                L270

L120:
     getlocal1
     getlocal3
     getlocal            14
     iffalse             L288

L124:
     subtract
     getlocal            14
     iffalse             L171

     getlocal            7
     multiply
     getlocal2
     getlocal            13
     iftrue              L164

     getlocal            4
     getlocal            13
     dup
     iffalse             L139

     pop
     getlocal0
     convert_b
L139:
     iftrue              L163

     subtract
     jump                L148

     rshift
     instanceof
     lessequals
     setlocal            9

     declocal_i          13
     kill                5
L148:
     getlocal            14
     dup
     iftrue              L154

     pop
     getlocal1
     convert_b
L154:
     iffalse             L168

     getlocal            8
     getlocal            14
     dup
     iftrue              L162

     pop
     getlocal2
     convert_b
L162:
     iffalse             L235

L163:
     multiply
L164:
     add
     getlocal            9
     getlocal            14
     iffalse             L265

L168:
     divide
     getlocal            14
     iffalse             L192

L171:
     convert_d
     dup
     setlocal            12

     pushdouble          0
     getlocal            13
     iftrue              L227

     ifnlt               L194

     getlocal3
     getlocal            14
     dup
     iftrue              L185

     pop
     getlocal1
     convert_b
L185:
     iffalse             L292

     convert_d
     setlocal            10

     getlocal            4
     convert_d
     getlocal            13
     iftrue              L246

L192:
     setlocal            11

     jump                L270

L194:
     getlocal            12
     pushbyte            1
     ifngt               L225

     getlocal            5
     convert_d
     getlocal            13
     dup
     iffalse             L205

     pop
     getlocal3
     convert_b
L205:
     iftrue              L246

     setlocal            10

     getlocal            14
     dup
     iftrue              L213

     pop
     getlocal2
     convert_b
L213:
     iffalse             L284

     getlocal            6
     getlocal            13
     dup
     iffalse             L221

     pop
     getlocal0
     convert_b
L221:
     iftrue              L287

     convert_d
     setlocal            11

     jump                L270

L225:
     getlocal3
     getlocal            12
L227:
     getlocal            7
     getlocal            13
     dup
     iffalse             L234

     pop
     getlocal1
     convert_b
L234:
     iftrue              L262

L235:
     multiply
     getlocal            13
     iftrue              L281

     add
     getlocal            13
     dup
     iffalse             L245

     pop
     getlocal3
     convert_b
L245:
     iftrue              L287

L246:
     convert_d
     setlocal            10

     getlocal            13
     dup
     iffalse             L254

     pop
     getlocal3
     convert_b
L254:
     iftrue              L284

     getlocal            4
     getlocal            13
     iftrue              L291

     getlocal            12
     getlocal            13
     iftrue              L265

     getlocal            8
L262:
     multiply
     getlocal            14
     iffalse             L281

L265:
     add
     getlocal            14
     iffalse             L292

     convert_d
     setlocal            11

L270:
     getlocal1
     getlocal            10
     jump                L279

     istypelate
     setlocal            8

     add_i
     declocal            6
     declocal_i          12
     add
L279:
     getlocal            13
     iftrue              L288

L281:
     subtract
     convert_d
     setlocal            7

L284:
     getlocal2
     getlocal            13
     iftrue              L291

L287:
     getlocal            11
L288:
     subtract
     getlocal            13
     iftrue              L292

L291:
     convert_d
L292:
     setlocal            8

     getlex              QName(PackageNamespace(""), "Math")
     getlocal            7
     getlocal            7
     multiply
     getlocal            8
     getlocal            8
     multiply
     add
     callproperty        QName(PackageNamespace(""), "sqrt"), 1
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
end ; class
